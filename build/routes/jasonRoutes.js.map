{"version":3,"sources":["../../backend/routes/jasonRoutes.js"],"names":["getAllApplicantsRoute","path","method","handler","req","res","applicants","Error","send","status","message","getApplicantByIdRoute","params","applicantID","applicant","addNewApplicantRoute","body","name","age","height","weight","sport","newApplicant"],"mappings":";;;;;;;AAAA;;;;AAMO,IAAMA,wDAAwB;AACjCC,UAAM,iBAD2B;AAEjCC,YAAQ,KAFyB;AAGjCC;AAAA,2EAAS,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEwB,yCAFxB;;AAAA;AAEKC,sCAFL;;AAAA,gCAGIA,UAHJ;AAAA;AAAA;AAAA;;AAAA,kCAIS,IAAIC,KAAJ,CAAU,2CAAV,CAJT;;AAAA;AAMGF,gCAAIG,IAAJ,CAASF,UAAT;;AANH;AAAA;AAAA;;AAAA;AAAA;AAAA;;AASDD,gCAAII,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB,YAAIE,OAAzB;;AATC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAT;;AAAA;AAAA;AAAA;AAAA;AAHiC,CAA9B;;AAiBA,IAAMC,wDAAwB;AACjCV,UAAM,6BAD2B;AAEjCC,YAAQ,KAFyB;AAGjCC;AAAA,4EAAS,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,iCAEGD,IAAIQ,MAAJ,CAAWC,WAFd;AAAA;AAAA;AAAA;;AAAA;AAAA,mCAG2B,0CACpBT,IAAIQ,MAAJ,CAAWC,WADS,CAH3B;;AAAA;AAGSC,qCAHT;;AAAA,gCAMQA,SANR;AAAA;AAAA;AAAA;;AAAA,kCAOa,IAAIP,KAAJ,CAAU,uCAAV,CAPb;;AAAA;AASOF,gCAAIG,IAAJ,CAASM,SAAT;;AATP;AAAA;AAAA;;AAAA;AAAA,kCAYS,IAAIP,KAAJ,CACF,oEADE,CAZT;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAiBDF,gCAAII,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB,aAAIE,OAAzB;;AAjBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAT;;AAAA;AAAA;AAAA;AAAA;AAHiC,CAA9B;;AAyBA,IAAMK,sDAAuB;AAChCd,UAAM,gBAD0B;AAEhCC,YAAQ,MAFwB;AAGhCC;AAAA,4EAAS,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAE4CD,IAAIY,IAFhD,EAEOC,IAFP,aAEOA,IAFP,EAEaC,GAFb,aAEaA,GAFb,EAEkBC,MAFlB,aAEkBA,MAFlB,EAE0BC,MAF1B,aAE0BA,MAF1B,EAEkCC,KAFlC,aAEkCA,KAFlC;AAAA;AAAA,mCAG0B,uCACvBJ,IADuB,EAEvBC,GAFuB,EAGvBC,MAHuB,EAIvBC,MAJuB,EAKvBC,KALuB,CAH1B;;AAAA;AAGKC,wCAHL;;AAAA,iCAUGA,YAVH;AAAA;AAAA;AAAA;;AAWGjB,gCAAIG,IAAJ,CAASc,YAAT;AAXH;AAAA;;AAAA;AAAA,kCAaS,IAAIf,KAAJ,CACF,iDADE,CAbT;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAkBDF,gCAAII,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB,aAAIE,OAAzB;;AAlBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAT;;AAAA;AAAA;AAAA;AAAA;AAHgC,CAA7B","file":"jasonRoutes.js","sourcesContent":["import {\r\n    addNewApplicant,\r\n    getAllApplicants,\r\n    getApplicantWithID,\r\n} from \"../controllers/jasonControllers\";\r\n\r\nexport const getAllApplicantsRoute = {\r\n    path: \"/api/applicants\",\r\n    method: \"get\",\r\n    handler: async (req, res) => {\r\n        try {\r\n            const applicants = await getAllApplicants();\r\n            if (!applicants) {\r\n                throw new Error(\"Il n'existe pas de candidats enregistrés.\");\r\n            } else {\r\n                res.send(applicants);\r\n            }\r\n        } catch (err) {\r\n            res.status(503).send(err.message);\r\n        }\r\n    },\r\n};\r\n\r\nexport const getApplicantByIdRoute = {\r\n    path: \"/api/applicant/:applicantID\",\r\n    method: \"get\",\r\n    handler: async (req, res) => {\r\n        try {\r\n            if (req.params.applicantID) {\r\n                const applicant = await getApplicantWithID(\r\n                    req.params.applicantID\r\n                );\r\n                if (!applicant) {\r\n                    throw new Error(\"Cet id ne correspond à aucun candidat\");\r\n                } else {\r\n                    res.send(applicant);\r\n                }\r\n            } else {\r\n                throw new Error(\r\n                    \"Impossible d'accèder à cette requête : il manque l'id du candidat.\"\r\n                );\r\n            }\r\n        } catch (err) {\r\n            res.status(503).send(err.message);\r\n        }\r\n    },\r\n};\r\n\r\nexport const addNewApplicantRoute = {\r\n    path: \"/api/applicant\",\r\n    method: \"post\",\r\n    handler: async (req, res) => {\r\n        try {\r\n            const { name, age, height, weight, sport } = req.body;\r\n            const newApplicant = await addNewApplicant(\r\n                name,\r\n                age,\r\n                height,\r\n                weight,\r\n                sport\r\n            );\r\n            if (newApplicant) {\r\n                res.send(newApplicant);\r\n            } else {\r\n                throw new Error(\r\n                    \"Impossible d'enregistrer ce nouvel utilisateur.\"\r\n                );\r\n            }\r\n        } catch (err) {\r\n            res.status(503).send(err.message);\r\n        }\r\n    },\r\n};\r\n"]}